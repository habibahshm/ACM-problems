import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class StackingBoxes {
	static Box[] boxes;
	static int b, d;

	static class Box implements Comparable<Box> {
		int[] dimensions;
		int idx;

		public Box(int[] d, int i) {
			dimensions = d;
			idx = i;
		}

		@Override
		public int compareTo(Box o) {
			int s1 = 0;
			int s2 = 0;
			for (int j = 0; j < dimensions.length; j++)
				s1 += dimensions[j];
			for (int j = 0; j < o.dimensions.length; j++)
				s2 += o.dimensions[j];
			return s1 - s2;
		}

	}

	public static void main(String[] args) throws IOException {
		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		while (true) {
			st = new StringTokenizer(bf.readLine());
			b = Integer.parseInt(st.nextToken());
			d = Integer.parseInt(st.nextToken());
			boxes = new Box[b];
			for (int i = 0; i < b; i++) {
				st = new StringTokenizer(bf.readLine());
				int[] dim = new int[d];
				for (int j = 0; st.hasMoreTokens(); j++)
					dim[j] = Integer.parseInt(st.nextToken());
				Arrays.sort(dim);
				boxes[i] = new Box(dim, i + 1);
			}
			Arrays.sort(boxes);
		}
	}
}
